#  add preseed/url=http://host/path/to/preseed.cfg to the kernel options

# locale
d-i debian-installer/locale string en_US

# Keyboard selection.
d-i console-keymaps-at/keymap select us
d-i keyboard-configuration/xkb-keymap select us

# netcfg will choose an interface that has link if possible. This makes it
# skip displaying a list if there is more than one interface.
d-i netcfg/choose_interface select eth0

# Any hostname and domain names assigned from dhcp take precedence over
# values set here. However, setting the values still prevents the questions
# from being shown, even if values come from dhcp.
d-i netcfg/get_hostname string unassigned-hostname
d-i netcfg/get_domain string unassigned-domain

# Disable that annoying WEP key dialog.
d-i netcfg/wireless_wep string

d-i mirror/protocol string http
d-i mirror/country string us
d-i mirror/http/hostname string http.us.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string http://10.0.2.2:3128
#d-i mirror/ftp/hostname string ftp.ca.debian.org
#d-i mirror/ftp/directory string /debian

d-i passwd/root-login boolean false

# To create a normal user account.
d-i passwd/user-fullname string vmfest user
d-i passwd/username string vmfest
# Normal user's password, either in clear text
d-i passwd/user-password password vmfest
d-i passwd/user-password-again password vmfest

d-i clock-setup/utc boolean true

d-i time/zone string US/Pacific

# Controls whether to use NTP to set the clock during the install
d-i clock-setup/ntp boolean true

d-i partman-auto/method string regular

# If one of the disks that are going to be automatically partitioned
# contains an old LVM configuration, the user will normally receive a
# warning. This can be preseeded away...
d-i partman-lvm/device_remove_lvm boolean true
# The same applies to pre-existing software RAID array:
d-i partman-md/device_remove_md boolean true
# And the same goes for the confirmation to write the lvm partitions.
d-i partman-lvm/confirm boolean true

# You can choose one of the three predefined partitioning recipes:
# - atomic: all files in one partition
# - home:   separate /home partition
# - multi:  separate /home, /usr, /var, and /tmp partitions
d-i partman-auto/choose_recipe select atomic

# This makes partman automatically partition without confirmation, provided
# that you told it what to do using one of the methods above.
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# This makes partman automatically partition without confirmation.
d-i partman-md/confirm boolean true
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# There is actually not very much that can be preseeded for this stage of the installation. The only questions asked concern the installation of the kernel.
# Configure APT to not install recommended packages by default. Use of this
# option can result in an incomplete system and should only be used by very
# experienced users.
#d-i base-installer/install-recommends boolean false

# Select the initramfs generator used to generate the initrd for 2.6 kernels.
#d-i base-installer/kernel/linux/initramfs-generators string initramfs-tools

# The kernel image (meta) package to be installed; "none" can be used if no
# kernel is to be installed.
#d-i base-installer/kernel/image string linux-image-2.6-486

# You can choose to install non-free and contrib software.
#d-i apt-setup/non-free boolean true
#d-i apt-setup/contrib boolean true
# Uncomment this if you don't want to use a network mirror.
d-i apt-setup/use_mirror boolean true
# Select which update services to use; define the mirrors to be used.
# Values shown below are the normal defaults.
#d-i apt-setup/services-select multiselect security, volatile
#d-i apt-setup/security_host string security.debian.org
#d-i apt-setup/volatile_host string volatile.debian.org

# Additional repositories, local[0-9] available
#d-i apt-setup/local0/repository string \
#       http://local.server/debian stable main
#d-i apt-setup/local0/comment string local server
# Enable deb-src lines
#d-i apt-setup/local0/source boolean true
# URL to the public key of the local repository; you must provide a key or
# apt will complain about the unauthenticated repository and so the
# sources.list line will be left commented out
#d-i apt-setup/local0/key string http://local.server/key

# By default the installer requires that repositories be authenticated
# using a known gpg key. This setting can be used to disable that
# authentication. Warning: Insecure, not recommended.
#d-i debian-installer/allow_unauthenticated boolean true


tasksel tasksel/first multiselect standard

# Individual additional packages to install
d-i pkgsel/include string build-essential module-assistant openssh-server
# Whether to upgrade packages after debootstrap.
# Allowed values: none, safe-upgrade, full-upgrade
d-i pkgsel/upgrade select full-upgrade

# This is fairly safe to set, it makes grub install automatically to the MBR
# if no other operating system is detected on the machine.
d-i grub-installer/only_debian boolean true

# This one makes grub-installer install to the MBR if it also finds some other
# OS, which is less safe as it might not be able to boot that other OS.
d-i grub-installer/with_other_os boolean true

# Use the following option to add additional boot parameters for the
# installed system (if supported by the bootloader installer).
# Note: options passed to the installer will be added automatically.
#d-i debian-installer/add-kernel-opts string nousb

# Avoid that last message about the install being complete.
d-i finish-install/reboot_in_progress note

# This will prevent the installer from ejecting the CD during the reboot,
# which is useful in some situations.
#d-i cdrom-detect/eject boolean false

#### VIRTUALBOX 

# Install virtualbox additions.
# Requires the guest additions iso connected to the secondary slave.
# This seems overly complicated, but is a combination
# that seems to work:
#   the vbox ose packages were somehow being installed by the standard task,
#   the LSB header is required for update-rc.d, which in turn is needed,
#   due to straight linking to rc2.d not working (automatic boot sequence,
#   and dependency management),
#   cdrom source not being removed at the point when this script runs.
# Deletes /etc/udev/rules.d/70-persistent-net.rules to allow cloning.
# Changes eth* to auto instead of allow-hotplug
d-i preseed/late_command string \
echo '#! /bin/sh' > /target/etc/init.d/vbox; \
echo 'rm /etc/udev/rules.d/70-persistent-net.rules' > /target/etc/init.d/vbox; \
echo 'sed -i -e "s/allow-hotplug/auto/" /etc/network/interfaces' > /target/etc/init.d/vbox; \
echo '### BEGIN INIT INFO' >> /target/etc/init.d/vbox; \
echo '# Provides: vbox' >> /target/etc/init.d/vbox; \
echo '# Required-Start: $local_fs $remote_fs $netdaemons' >> /target/etc/init.d/vbox; \
echo '# Required-Stop: $local_fs' >> /target/etc/init.d/vbox; \
echo '# Default-Start: 2' >> /target/etc/init.d/vbox; \
echo '# Default-Stop:' >> /target/etc/init.d/vbox; \
echo '# Short-Description: build vbox guest additions' >> /target/etc/init.d/vbox; \
echo '### END INIT INFO' >> /target/etc/init.d/vbox; \
echo '' >> /target/etc/init.d/vbox; \
echo 'PATH=/sbin:/bin:/usr/bin:/usr/sbin' >> /target/etc/init.d/vbox; \
echo '. /lib/init/vars.sh' >> /target/etc/init.d/vbox; \
echo 'aptitude purge -y virtualbox-ose-guest-x11 virtualbox-ose-guest-dkms virtualbox-ose-guest-utils' >> /target/etc/init.d/vbox; \
echo 'sed -i -e "/.*cdrom.*/ d" /etc/apt/sources.list;' >> /target/etc/init.d/vbox; \
echo 'mount /media/cdrom; mount /media/cdrom1; m-a -i -t prepare;' >> /target/etc/init.d/vbox; \
echo '/bin/sh /media/cdrom1/VBoxLinuxAdditions.run force && aptitude purge -y build-essential module-assistant && update-rc.d -f vbox remove && rm -f /etc/init.d/vbox /etc/rc?.d/*vbox;' >> /target/etc/init.d/vbox; \
chmod 755 /target/etc/init.d/vbox; \
cd /target/etc/rc2.d; \
in-target /usr/sbin/update-rc.d vbox defaults; \
in-target /usr/sbin/update-rc.d ssh defaults; \
### enable all network interfaces
echo '# vmfest enable other network interfaces by default' >> /target/etc/network/interfaces; \
echo 'auto eth1' >> /target/etc/network/interfaces; \
echo 'iface eth1 inet dhcp' >> /target/etc/network/interfaces; \
echo 'auto eth2' >> /target/etc/network/interfaces; \
echo 'iface eth2 inet dhcp' >> /target/etc/network/interfaces; \
echo 'auto eth3' >> /target/etc/network/interfaces; \
echo 'iface eth3 inet dhcp' >> /target/etc/network/interfaces; \
### remove /etc/udev/rules.d/70-persistent-net.rules
rm /target/etc/udev/rules.d/70-persistent-net.rules; \
rm /target/lib/udev/rules.d/75-persistent-net-generator.rules 

